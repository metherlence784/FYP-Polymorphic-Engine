commit d96d9175ec6104c0c934ee8e33d0bc5f7cd8ab9c
Author: jtf256 <jtf256@hotmail.com>
Date:   Mon Jul 6 00:55:16 2020 +0800

    In the Morph_Executable_Controller, we added the morph_exe_with_encryption function, this will generate a random key, and place it at the first offset of the payload section. Next, the decryption function will take the aforementioned key, from the first offset, to start decrypting the payload. The jne instruction is a short backwards jump, which is relative to 8 bits, we managed to dynamically calculate the offset needed to jump to.

commit 05a4a19399c95b9a1a6022b50ba6844db6f17264
Author: jtf256 <jtf256@hotmail.com>
Date:   Sat Jul 4 22:58:55 2020 +0800

    In the Morph_Executable_Controller, we edited the morph_exe_no_encryption function, to store the original entry point in edi. We also added a new function to morph_exe_with_encryption, currently is incomplete.

commit 7ba3d1aea023c02b9b3066a167c52b0c02d3ee0e
Author: jtf256 <jtf256@hotmail.com>
Date:   Sat Jul 4 01:24:33 2020 +0800

    In the Morph_Executable_Controller, we added the patch for the entry point for the text section and we also added the payload into the payload section, once all of this is done, we stored it back to the buffer, which is the bytes of the exe file. Several additional functions were made to accomplish the aforementioned. Also, we made a function for centralized error printing, several functions have been refactored for the aforementioned centralized error function.
    
    In the File_Saver entity, we added a new function to write the buffer to an exe file.
    
    In the error.h, we added a few error and success messages.

commit 0da0378ca009cb9debf951bda71181a1eb44260b
Author: jtf256 <jtf256@hotmail.com>
Date:   Fri Jul 3 00:20:07 2020 +0800

    In the Morph_Executable_Controller, in the morph function, we calculated entry point of the text section, file and section alignment, calculated the relevant offsets for the payload section. In addition, we calculated the section pivot gadget's jump to the entry point using assembly code and converting it to machine code via keystone. All functions added are mainly for the aforementioned.
    
    We added error and success messages related to keystone in the error.h.
    
    We added a template_functions.h to store our template functions.

commit 9b475ad49e7cce43de4defbec90d458414d47bc3
Author: jtf256 <jtf256@hotmail.com>
Date:   Wed Jul 1 23:30:27 2020 +0800

    Included the keystone API to work with both QT Creator and Visual Studios 2017.
    
    Added a morph button and a morph menu item into the UI.
    
    Modified windows.h into pe32.h, to only use relevant structs for reading 32 bit pe files.
    
    In the Compile_Code_Controller, we added a new variable, exe_file_path, along with its relevant accessors and mutators
    
    Added the Morph_Executable_Controller, in BCE format, this will allow us to morph the executable file by reading via a new method, to read bytes, in the File_Reader. Currently, we have validated the DOS and PE signatures and increase the number of sections. In addition, we have made a function to generate a random 8 character name for the new payload section. Note that as of yet, no morphing or writing to file has been implemented.
    
    Added new relevant errors and success messages into error.h
    
    We have also noted that printf() behaves abnormally with the QT application. It will only display if there is a std::cout statement after it.

commit 5bba1ad3e3157283b4cce3807bef615c7ce5a6a4
Author: jtf256 <jtf256@hotmail.com>
Date:   Fri Jun 19 22:01:28 2020 +0800

    Reuploaded files, previous commit failed

commit 6d8b0aca2255e6e81d592162a977f5efff678a81
Author: jtf256 <jtf256@hotmail.com>
Date:   Fri Jun 19 16:00:27 2020 +0800

    In the Compile_Code_Controller, the compile_code() function, we fixed a bug involving the spacing inside the file path. We added quotation marks and the start of ends of the file path to prevent this error.
    
    In the error.h, we added a new error for no file name specified, and included this check in the File_Reader, the open_file() function and in Open_Existing_File_Controller, the open_existing_file() function.
    
    In the Open_Existing_File_Controller, the open_existing_file() function, we added an additional check for the extension of an opened file, if it isnt .c or .cpp, we will not load the file, and will popup a window with a corresponding warning.

commit 88d78a4fe84c5e37186780624e26643aa514a6bf
Author: jtf256 <jtf256@hotmail.com>
Date:   Fri Jun 12 16:26:13 2020 +0800

    created a variable, chosen_payload, in the Choose_Payload_Controller to store the payload which the user selects in the get_payload function

commit 0a1d1b88964d914b52ccea6d9f4b390b285efd89
Author: jtf256 <jtf256@hotmail.com>
Date:   Thu Jun 11 16:59:51 2020 +0800

    Added the View_Compilation_Status_Controller, in BCE format, this will switch to the analysis tab after compilation, to display the compilation related messages.
    Removed the update_analysis_textbox from the Compile_Code_Controller and moved it to the View_Compilation_Status_Controller.
    New accessor and mutator methods have been added inside the Compile_Code_Controller.

commit 710e3f9c7589612574cdab567fdc308af1c313fc
Author: jtf256 <jtf256@hotmail.com>
Date:   Thu Jun 11 16:32:34 2020 +0800

    Added a Morph Menu Header with the Compile Menu Item within it. Upon clicking, it does the same function as clicking the Compile Button

commit 919ea643f181fb88b61c6a7f6832dfa047227e83
Author: jtf256 <jtf256@hotmail.com>
Date:   Thu Jun 11 15:48:29 2020 +0800

    Added the error ERROR_PAYLOAD_NOT_FOUND in to the error header file. This error is also placed in the get_payloaod_radio_button function in the mainwindow

commit ffd71719bd32c765ca71ddfb90a581d9675036f3
Author: jtf256 <jtf256@hotmail.com>
Date:   Thu Jun 11 14:36:47 2020 +0800

    Implemented the switch to analysis tab upon clicking the compile button

commit 023ffd40c5e7dafd89c4c165adce9da5dd3bc6af
Author: jtf256 <jtf256@hotmail.com>
Date:   Wed Jun 10 23:25:59 2020 +0800

    Added the Compile_Code_Controller, in BCE format, this will allow for code compilation, note that the user must have g++ version 8.2 minimum and the environmental paths are set correctly.
    The compilation status will be stored in a temporary file, called temp_compile.txt, this file will be put in the users app data local folder, and will be deleted once it has been read from.
    The compilation status will be shown in the Analysis tab text box. It will show the  date time of compilation, and the elapsed time to compile, in milliseconds.
    UI elements were modified for a cleaner look.
    All errors have been consolidated to a single error.h file, all errors should be updated and called from this file.
    We refactored the get_cur_filename and set_cur_filename from mainwindow files to get_cur_file_path and set_cur_file_path, respectively as it was confusing.

commit 56e2cd063eaf10651462c62d1ee42bc70bc0dcba
Author: jtf256 <jtf256@hotmail.com>
Date:   Tue Jun 9 21:37:00 2020 +0800

    Added the Choose_Payload_Controller in BCE format
    Added the 4 radio buttons into a group, in the C0d3z tab of the UI, each corresponding to a payload, note that for now, none of the payloads work, these are placeholders
    Added a Textbox, named Analysis_Textbox, in the analysis tab of the UI

commit 700e3c93f2f7d1b260414607ad5d8a26ab98c648
Author: jtf256 <jtf256@hotmail.com>
Date:   Sun Jun 7 23:21:49 2020 +0800

    added shortcuts for the undo and redo functionalities, ctrl + z and ctrl + y respectively.

commit 48ba0fcbc4de2ca1c41091171872d1c8f0a19036
Author: jtf256 <jtf256@hotmail.com>
Date:   Sat Jun 6 21:09:28 2020 +0800

    Added the Redo_Action_Controller and Undo_Action_Controller, in BCE format, with the undo and redo implementation.
    Added a new menu header Edit, this contains the Undo and Redo menu items.

commit 000bbff632886888ef84ca9eedb7386364de3b0c
Author: jtf256 <jtf256@hotmail.com>
Date:   Fri May 15 22:06:20 2020 +0800

    We added two symbols in the regex check, namely single and double quotation in the File_Saver entity class

commit f2317a4215a5b40c86fce79c6328ef4063591a33
Author: jtf256 <jtf256@hotmail.com>
Date:   Wed May 13 20:41:38 2020 +0800

    Added the Write_Code_In_C_CPP_Controller, in BCE format, other controllers use this controller to access anything related to the code input textbox in the main UI.
    Updated all the controllers, that previously accesses the Code Input Textbox from the UI directly, to now use the Write_Code_In_C_CPP_Controller.
    We formatted each class to make it look neat.

commit fc7d1264025410be33c358a7c7f02ccd736f55da
Author: jtf256 <jtf256@hotmail.com>
Date:   Tue May 12 17:08:37 2020 +0800

    Modified the Exit_Application_Controller, We added error handling for both the top right X button and our own menu exit button which includes checking if the content is saved or not.
    We added Open_Existing_File_Controller, and linked it with the File_Saver entity (BCE format), we also added error handling incase tries to open file formats which are not filtered by QT.
    We added Save_As_New_File_Controller, and linked it the File_Saver entity ( BCE Format ), we added error handling, similar to the Create_New_File_Controller.
    We added Save_Current_File_Controller, and linked it the File_Saver entity ( BCE Format ), it uses the already set filepath in the running application and saves the current content overiding the file, a shortcut (Ctrl + S) has also been added.
    Note that when modifiying the UI via Qt Creator, it will not update, you must first open the project in visual studios and debug/run it one time, and it will be updated in QT creator.

commit bb60764690b369b3468ae97e57df66f2efdc61e0
Author: jtf256 <jtf256@hotmail.com>
Date:   Mon May 11 23:07:15 2020 +0800

    Removed the warning popup when you cancel from the save file window

commit 0711aa3aaa3917755ee6c1d0297c25fc057283bb
Author: jtf256 <jtf256@hotmail.com>
Date:   Mon May 11 22:57:49 2020 +0800

    Implemented the create new file function with the BCE format, the entity is called File_Saver, the controller is called Create_New_File_Controller, errors are handled inside the controller, possibly might need to modify regex expression in the entity class (File_Saver)

commit f8c82343ebe49441fbf07b620789a3c8cb47ecba
Author: Yogeswarren v <yogeswarren93@hotmail.com>
Date:   Sun May 10 19:06:27 2020 +0800

    Added exit application functionality. Using BCE, we have made a Exit_Application_Controller which helps us to exit the program when we click the exit button in the menu bar.

commit d492f907396aa9ae4455e5a7b0af1deb4548936e
Author: Yogeswarren v <yogeswarren93@hotmail.com>
Date:   Sun May 10 17:15:36 2020 +0800

    added a test class to check if everyone can access part 2

commit 0d694bb43975d4f4cd930115e81103bd3d7e83df
Author: Yogeswarren v <yogeswarren93@hotmail.com>
Date:   Sun May 10 17:09:03 2020 +0800

    added a test class to check if everyone can access

commit 24b3b5d31f16b198a1b9106a9b4ea740201efc2b
Author: jtf256 <jtf256@hotmail.com>
Date:   Sun May 10 16:53:52 2020 +0800

    first commit, empty QT project
